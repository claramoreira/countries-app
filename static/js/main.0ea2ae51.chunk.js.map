{"version":3,"sources":["components/Country.jsx","components/numberFormat.js","components/CountryList.jsx","components/getCountryInfo.js","components/Form.jsx","components/CountryApp.jsx","App.js","reportWebVitals.js","index.js"],"names":["Country","x","className","style","backgroundColor","Africa","Americas","Asia","Europe","Oceania","this","props","region","name","capital","timezones","map","timezone","population","toString","replace","alpha3Code","React","Component","CountryList","countries","country","key","getCountryInfo","countryName","a","promise","axios","get","dataPromise","then","response","data","Form","state","userInput","handleSubmit","event","preventDefault","newCountry","console","log","found","i","length","alert","addNewCountry","setState","onSubmit","value","onChange","target","type","placeholder","CountryApp","prevCountries","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ea2ae51.chunk.js","sourcesContent":["import React from 'react';\r\nimport numberWithDots from './numberFormat';\r\n\r\nclass Country extends React.Component {\r\n\r\n\r\n    render() {\r\n        const colors = {\r\n            Africa: 'rgba(0, 133, 199, .7)',\r\n            Americas: 'rgba(244, 195, 0, .7)',\r\n            Asia: 'rgba(143, 143, 143, .7)',\r\n            Europe: 'rgba(0, 159, 61, .7)',\r\n            Oceania: 'rgba(233, 0, 36, .7)'\r\n        }\r\n        return (\r\n            <div className=\"country-card\" key={this.props.alpha3Code} style={{ backgroundColor: colors[this.props.region] }}>\r\n                <h1>{this.props.name}</h1>\r\n                <div className=\"info\">\r\n                    <p className=\"info-label\">Capital:</p>\r\n                    <p>{this.props.capital}</p>\r\n                </div>\r\n                <div className=\"info\">\r\n                    <p className=\"info-label\">Region:</p>\r\n                    <p>{this.props.region}</p>\r\n                </div>\r\n                <div className=\"info\">\r\n                    <p className=\"info-label\">Timezones:</p>\r\n                    <p>{this.props.timezones.map((timezone) => { return <span key={timezone}>{timezone} / </span> })}</p>\r\n                </div>\r\n                <div className=\"info\">\r\n                    <p className=\"info-label\">Population:</p>\r\n                    <p>{numberWithDots(this.props.population)}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Country;","export default function numberWithDots(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.');\r\n}","import React from 'react'\r\nimport Country from './Country'\r\n\r\nclass CountryList extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"country-list\">\r\n                <h2>Countries List</h2>\r\n                <div className=\"country-gallery\">\r\n                    {this.props.countries.map((country) => <Country {...country} key={country.alpha3Code} />)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CountryList;","import axios from 'axios'\r\n\r\nexport default async function getCountryInfo(countryName) {\r\n\r\n    // create a promise for the axios request\r\n    const promise = axios.get(`https://restcountries.eu/rest/v2/name/${countryName}`)\r\n\r\n    // using .then, create a new promise which extracts the data\r\n    const dataPromise = promise.then((response) => response.data)\r\n\r\n    return dataPromise\r\n}","import React from 'react';\r\nimport getCountryInfo from './getCountryInfo';\r\n\r\nclass Form extends React.Component {\r\n\r\n    state = {\r\n        userInput: ''\r\n    }\r\n\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n        const newCountry = await (getCountryInfo(this.state.userInput))\r\n        console.log(newCountry[0])\r\n        var found = false;\r\n        for (var i = 0; i < this.props.countries.length; i++) {\r\n            if (this.props.countries[i].name == newCountry[0].name) {\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n        if (found) {\r\n            alert(\"NÃ£o pode!\")\r\n        }\r\n        else {\r\n            this.props.addNewCountry(newCountry[0])\r\n            this.setState({\r\n                userInput: ''\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"submit-form\" onSubmit={this.handleSubmit} >\r\n                <input value={this.state.userInput} onChange={(event) => this.setState({ userInput: event.target.value })} type=\"text\" placeholder=\"Type any country\" />\r\n                <button>Add new country</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form;","import React from 'react'\r\nimport CountryList from './CountryList'\r\nimport Form from './Form'\r\n\r\nclass CountryApp extends React.Component {\r\n\r\n    state = {\r\n        countries: []\r\n    }\r\n\r\n    addNewCountry = (newCountry) => {\r\n        this.setState(prevCountries => ({ countries: [...prevCountries.countries, newCountry] }))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"country-app\">\r\n                <div className=\"header\">\r\n                    <h1>Countries App</h1>\r\n                </div>\r\n                <Form addNewCountry={this.addNewCountry} countries={this.state.countries} />\r\n                <CountryList countries={this.state.countries} />\r\n                {console.log(this.state.countries)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CountryApp;","import './App.css';\nimport CountryApp from './components/CountryApp';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CountryApp />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}